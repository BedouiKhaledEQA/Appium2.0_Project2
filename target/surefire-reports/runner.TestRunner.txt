-------------------------------------------------------------------------------
Test set: runner.TestRunner
-------------------------------------------------------------------------------
Tests run: 3, Failures: 0, Errors: 2, Skipped: 1, Time elapsed: 7.075 s <<< FAILURE! -- in runner.TestRunner
Run android application via ADB.User run application -- Time elapsed: 5.740 s <<< ERROR!
org.openqa.selenium.SessionNotCreatedException: 
Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a driver for automationName 'XCUITest' and platformName 'IOS'. Have you installed a driver that supports those capabilities? Run 'appium driver list --installed' to see. (Lower-level error: Could not find installed driver to support given caps) 
Host info: host: 'DESKTOP-10F2RV2', ip: '192.168.2.23'
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: io.appium.java_client.ios.IOSDriver
Command: [null, newSession {capabilities=[{appium:deviceName=Iphone 11, appium:automationName=XCUITest, platformName=IOS, appium:bundleId=com.example.apple-samplecode.UICatalog}], desiredCapabilities=Capabilities {automationName: XCUITest, bundleId: com.example.apple-samplecod..., deviceName: Iphone 11, platformName: IOS}}]
Capabilities {automationName: XCUITest, bundleId: com.example.apple-samplecod..., deviceName: Iphone 11, platformName: IOS}
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
	at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
	at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:161)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:101)
	at com.Appium2_0_Project.Base.InitializeDriver(Base.java:74)
	at steps.runAppSteps.user_run_application(runAppSteps.java:12)
	at ✽.User run application(file:///C:/Users/KhaledBEDOUI/IdeaProjects/Appium2.0_Project/src/test/java/features/runApp.feature:4)

Run android application via ADB -- Time elapsed: 0.805 s <<< ERROR!
org.openqa.selenium.SessionNotCreatedException: 
Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Could not find a driver for automationName 'XCUITest' and platformName 'IOS'. Have you installed a driver that supports those capabilities? Run 'appium driver list --installed' to see. (Lower-level error: Could not find installed driver to support given caps) 
Host info: host: 'DESKTOP-10F2RV2', ip: '192.168.2.23'
Build info: version: '4.21.0', revision: '79ed462ef4'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: io.appium.java_client.ios.IOSDriver
Command: [null, newSession {capabilities=[{appium:deviceName=Iphone 11, appium:automationName=XCUITest, platformName=IOS, appium:bundleId=com.example.apple-samplecode.UICatalog}], desiredCapabilities=Capabilities {automationName: XCUITest, bundleId: com.example.apple-samplecod..., deviceName: Iphone 11, platformName: IOS}}]
Capabilities {automationName: XCUITest, bundleId: com.example.apple-samplecod..., deviceName: Iphone 11, platformName: IOS}
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:116)
	at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:96)
	at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:268)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:161)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:90)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:102)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:101)
	at com.Appium2_0_Project.Base.InitializeDriver(Base.java:74)
	at steps.runAppSteps.user_run_application(runAppSteps.java:12)
	at ✽.User run application(file:///C:/Users/KhaledBEDOUI/IdeaProjects/Appium2.0_Project/src/test/java/features/runApp.feature:4)

