# Pre-Commit E2E Tests in Android
name: Pre-Commit E2E Tests in Android

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      # Setup Node JS - 16.13.0
      - name: Set up Node JS 16.13.0
        uses: actions/setup-node@v1
        with:
          node-version: '16.13.0'

      # Setup Java - 17
      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # Clean Maven Repository & Install Dependencies
      - name: Clean Maven Repository & Install Dependencies
        run: |
          mvn clean
          mvn install

      # Install Appium 2.5.1
      - name: Install Appium 2.5.1
        run: npm install -g appium@2.5.1

      # Run Android Emulator
      - name: Run Android Emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-30;google_apis;x86_64'
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_6_API_30 -k 'system-images;android-30;google_apis;x86_64' --force
          echo $ANDROID_HOME/emulator/emulator -list-avds
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd Pixel_6_API_30 -no-snapshot > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"

      # Start the Appium Server
      - name: Start the Appium Server
        run: appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &

      # Poll for Appium Server to Start
      - name: Poll for Appium Server to Start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/); do
            sleep 5
          done

      # Build Android App and Run Tests
      - name: Build Android App and Run Tests
        run: |
          mvn test

      # Upload Appium Logs
      - name: Upload Appium logs
        uses: actions/upload-artifact@v1
        with:
          name: appium.log
          path: appium.log

      # Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: test-results
          path: target/surefire-reports
