name: Android Instrumented Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - apiLevel: 32
            emuTag: google_apis
            arch: x86_64
          - apiLevel: 30
            emuTag: google_apis
            arch: x86
          - apiLevel: 28
            emuTag: default
            arch: x86
          - apiLevel: 23
            emuTag: default
            arch: x86

    env:
      CI: true
      ANDROID_AVD: emulator
      _FORCE_LOGS: 1
      TEST_PASS_THRESHOLD: 10

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.apiLevel }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: false
          api-level: ${{ matrix.apiLevel }}
          disable-spellchecker: true
          target: ${{ matrix.emuTag }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          arch: ${{ matrix.arch }}
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - run: nohup adb logcat > logcat.log &
        name: Capture logcat

      - name: Ensure Maven is installed
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Run Maven tests
        run: mvn test -Denv=local

      - name: Save logcat output
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: logcat-api${{ matrix.apiLevel }}
          path: logcat.log
