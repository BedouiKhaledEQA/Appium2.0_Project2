name: Run Appium Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Install Appium
        run: npm install -g appium@2.5.1

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd
            ~/.android/emu
            ~/.android/caches
          key: avd-${{ runner.os }}-${{ matrix.api-level }}-${{ hashFiles('**/gradle-wrapper.properties') }}

      - name: Create and start emulator
        if: steps.avd-cache.outputs.cache-hit != 'true'
        run: |
          echo no | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86"
          emulator -avd test -no-audio -no-window -gpu swiftshader_indirect &
          android-wait-for-emulator

      - name: Run Tests on Emulator
        run: |
          # Wait for emulator to be fully booted
          adb wait-for-device

          # Output emulator information
          adb shell getprop ro.product.model
          adb shell getprop ro.product.device
          
          # Run your Appium tests
          mvn test -Denv=local

      - name: Stop Emulator
        run: adb emu kill
