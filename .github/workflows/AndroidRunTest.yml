name: Run Android tests in GitHub Runner

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: |
            echo "Setting up environment variables"
            export ANDROID_HOME=$HOME/Library/Android/sdk
            export PATH=$PATH:$ANDROID_HOME/emulator
            export PATH=$PATH:$ANDROID_HOME/platform-tools
            export PATH=$PATH:$ANDROID_HOME/tools
            export PATH=$PATH:$ANDROID_HOME/tools/bin
            echo "ANDROID_HOME is set to: $ANDROID_HOME"
            echo "PATH is set to: $PATH"
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Install Appium
        run: |
          npm install -g appium@2.5.1
          appium -v
        shell: bash

      - name: Install UIAutomator2 driver for Appium
        run: |
          appium driver install uiautomator2@3.0.1
        shell: bash

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Android SDK packages
        run: |
          sdkmanager --install 'system-images;android-34;google_apis;x86_64'
          sdkmanager --install 'platform-tools'
          sdkmanager --install 'emulator'

      - name: Accept SDK licenses
        run: |
          echo y | sdkmanager --licenses

      - name: Create AVD
        run: |
          echo no | avdmanager create avd -n Pixel_5_API_34 -k "system-images;android-34;google_apis;x86_64" --force

      - name: List available AVDs
        run: |
          avdmanager list avd

      - name: Start emulator
        run: |
          emulator -avd Pixel_5_API_34 -no-audio -no-window &
          sleep 120
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}


      - name: Verify emulator is running
        run: |
             adb devices
        shell: bash

      - name: Start Appium server
        run: |
          appium &
        shell: bash
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Verify Appium server is running
        run: |
          curl http://127.0.0.1:4723/status
          if ($?) { Write-Host "Appium server is running" } else { Write-Host "Appium server is not running"; exit 1 }
        shell: pwsh

      - name: Run Android Tests
        run: |
          echo "JAVA_HOME: $env:JAVA_HOME"
          echo "ANDROID_HOME: $env:ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $env:ANDROID_SDK_ROOT"
          echo "Listing contents of the current directory:"
          ls -al
          echo "Running Maven tests..."
          mvn -Dtest=TestRunner test
          echo "Maven tests completed."
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      - name: Display Appium Logs
        run: |
          type appium.log
