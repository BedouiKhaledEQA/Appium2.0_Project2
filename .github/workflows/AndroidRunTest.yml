name: Appium Tests with Genymotion

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  appium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Appium
        run: npm install -g appium@2.0

      - name: Start Genymotion Cloud Emulator
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GENYMOTION_API_TOKEN }}" \
            -X POST https://cloud.geny.io/api/v1/devices \
            -d '{"template": "Pixel_6_API_30", "adb": true}' \
            -o device.json
          export DEVICE_ID=$(jq -r '.id' device.json)

      - name: Wait for Genymotion Emulator to boot
        run: |
          sleep 60 # Attendre que l'émulateur soit prêt

      - name: Run Appium Tests
        run: mvn test

      - name: Stop Genymotion Cloud Emulator
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GENYMOTION_API_TOKEN }}" \
            -X DELETE https://cloud.geny.io/api/v1/devices/$DEVICE_ID

      # Génération et déploiement du rapport Allure
      - name: Générer le rapport Allure
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Déployer le rapport sur GitHub Pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
