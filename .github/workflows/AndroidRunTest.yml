name: Appium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and extract Android SDK
        run: |
          mkdir -p $HOME/android-sdk
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          unzip sdk-tools.zip -d $HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-30" "build-tools;30.0.3" "extras;google;m2repository" "extras;android;m2repository"
      - name: Install Android SDK Tools
        run: |
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -l $ANDROID_SDK_ROOT

          # Assurez-vous que les outils de ligne de commande Android sont correctement installés
          if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools" ]; then
            echo "Creating cmdline-tools directory"
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          fi

          # Installer les outils de ligne de commande Android nécessaires
          if [ ! -d "$ANDROID_SDK_ROOT/cmdline-tools/tools" ]; then
            echo "Installing cmdline-tools"
            wget -nv -O sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
            unzip -q sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          else
            echo "cmdline-tools already installed"
          fi

          # Mettre à jour les outils de ligne de commande Android
          echo "Updating SDK packages"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "cmdline-tools;latest"
          yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platforms;android-30"

          # Vérifier l'installation
          ls -l $ANDROID_SDK_ROOT/cmdline-tools
          ls -l $ANDROID_SDK_ROOT/cmdline-tools/tools
          ls -l $ANDROID_SDK_ROOT/cmdline-tools/tools/bin
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64

      - name: Install UiAutomator2
        run: |
          $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "extras;google;webdriver"

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Install Appium
        run: npm install -g appium

      - name: Install UiAutomator2
        run: |
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -l $ANDROID_SDK_ROOT/cmdline-tools/bin/  # Vérifier la présence de sdkmanager
          $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "extras;google;webdriver"
      

      - name: Build and assemble APK
        run: mvn clean install

      - name: Start Appium Server
        run: appium &

      - name: Run Appium Tests
        run: mvn test

      - name: Stop Appium Server
        run: pkill -f appium

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ${{ github.workspace }}/test-output
