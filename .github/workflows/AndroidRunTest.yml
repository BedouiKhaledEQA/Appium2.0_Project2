name: Run Android tests in GitHub Runner

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Install Appium
        run: |
          npm install -g appium@2.5.1
          appium -v
        shell: bash

      - name: Install UIAutomator2 driver for Appium
        run: |
          appium driver install uiautomator2@3.0.1
        shell: bash

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Android SDK packages
        run: |
          sdkmanager --install 'system-images;android-34;google_apis;x86_64'
          sdkmanager --install 'platform-tools'
          sdkmanager --install 'emulator'

      - name: Accept SDK licenses
        run: |
          echo y | sdkmanager --licenses

      - name: Create AVD
        run: |
          echo no | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --force

      - name: Start emulator
        run: |
          emulator -avd test -no-window -no-audio -no-boot-anim &
          adb wait-for-device
          sleep 60
        env:
          ANDROID_SDK_ROOT: C:\Users\runneradmin\AppData\Local\Android\Sdk

      - name: Check Android emulator status
        run: adb devices

      - name: Wait for emulator to boot
        run: |
          boot_completed=false
          timeout=300
          while [ $timeout -gt 0 ]; do
            if adb shell getprop sys.boot_completed | grep -q "1"; then
              boot_completed=true
              break
            fi
            sleep 5
            timeout=$((timeout - 5))
          done
          if [ "$boot_completed" = false ]; then
            echo "Emulator boot timed out"
            exit 1
          fi

      - name: Start Appium server
        run: |
          appium --address 127.0.0.1 --port 4723 > appium.log 2>&1 &
          Start-Sleep -Seconds 20
        shell: pwsh
        env:
          ANDROID_HOME: C:\Users\runneradmin\AppData\Local\Android\Sdk
          ANDROID_SDK_ROOT: C:\Users\runneradmin\AppData\Local\Android\Sdk

      - name: Verify Appium server is running
        run: |
          curl http://127.0.0.1:4723/status || { echo "Appium server is not running"; exit 1; }
        shell: bash

      - name: Run Android Tests
        run: |
          echo "JAVA_HOME: $env:JAVA_HOME"
          mvn -Dtest=TestRunner test
        env:
          ANDROID_HOME: C:\Users\runneradmin\AppData\Local\Android\Sdk
          ANDROID_SDK_ROOT: C:\Users\runneradmin\AppData\Local\Android\Sdk

      - name: Display Appium Logs
        run: |
          type appium.log
        shell: pwsh
