name: Run Android tests in GitHub Runner

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    env:
      ANDROID_HOME: C:/Users/runneradmin/Library/Android/sdk
      ANDROID_SDK_ROOT: C:/Users/runneradmin/Library/Android/sdk
      PATH: ${{ env.PATH }};C:/Users/runneradmin/Library/Android/sdk/emulator;C:/Users/runneradmin/Library/Android/sdk/platform-tools;C:/Users/runneradmin/Library/Android/sdk/tools;C:/Users/runneradmin/Library/Android/sdk/tools/bin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      - name: Install Appium
        run: |
          npm install -g appium@latest
          appium -v
        shell: bash

      - name: Install Appium Doctor
        run: |
          npm install -g appium-doctor
          appium-doctor --version
        shell: bash

      - name: Install UIAutomator2 driver for Appium
        run: |
          appium driver install uiautomator2@latest
        shell: bash

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK packages
        run: |
          sdkmanager --install 'system-images;android-30;google_apis;x86_64'
          sdkmanager --install 'platform-tools'
          sdkmanager --install 'emulator'
        shell: bash

      - name: Accept SDK licenses
        run: |
          yes | sdkmanager --licenses
        shell: bash

      - name: Run Appium Doctor
        run: |
          appium-doctor --android
        shell: bash

      - name: Create AVD
        run: |
          echo no | avdmanager create avd -n Pixel_6_API_30 -k "system-images;android-30;google_apis;x86_64" --force
        timeout-minutes: 10

      - name: List available AVDs
        run: |
          avdmanager list avd
          dir $HOME\.android\avd
        shell: bash

      - name: Start emulator
        run: |
          emulator -avd Pixel_6_API_30 -no-audio -no-window &
          sleep 80
        shell: bash

      - name: Verify emulator is running
        run: |
          adb devices
          emulator_port=$(adb devices | grep emulator | cut -f1 | sed 's/emulator-//')
          if [ -z "$emulator_port" ]; then
            echo "Emulator did not start correctly"
            exit 1
          fi
          echo "Emulator is running on port: $emulator_port"
        shell: bash

      - name: Start Appium server
        run: |
          appium &
          sleep 10
        shell: bash

      - name: Verify Appium server is running
        run: |
          response=$(curl -s http://127.0.0.1:4723/status)
          if [[ $response == *"status"* ]]; then
            echo "Appium server is running"
          else
            echo "Appium server is not running"
            exit 1
          fi
        shell: bash

      - name: Run Android Tests
        run: |
          echo "JAVA_HOME: $env:JAVA_HOME"
          echo "ANDROID_HOME: $env:ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $env:ANDROID_SDK_ROOT"
          Get-ChildItem
          echo "Running Maven tests..."
          mvn test -Denv=local
          echo "Maven tests completed."
        shell: pwsh
