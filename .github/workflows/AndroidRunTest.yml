name: Run Android tests in GitHub Runner

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Configure KVM permissions
      - name: Configure KVM permissions
        run: |
          sudo usermod -aG kvm $USER
          echo "KVM permissions configured."
          groups $USER  # Verify that the user is in the kvm group

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'

      # Install Appium
      - name: Install Appium
        run: |
          npm install -g appium@latest
          appium -v

      # Install Appium Doctor
      - name: Install Appium Doctor
        run: |
          npm install -g appium-doctor
          appium-doctor --version

      # Install UIAutomator2 driver for Appium
      - name: Install UIAutomator2 driver for Appium
        run: |
          appium driver install uiautomator2@latest

      # Set up Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-levels: 34
          components: platform-tools, emulator, system-images;android-34;google_apis;x86_64

      # Accept SDK licenses
      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      # Install system image
      - name: Install system image
        run: sdkmanager "system-images;android-34;google_apis;x86_64"

      # Create AVD
      - name: Create AVD
        run: echo no | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --force
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

      # Start emulator
      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio &
          adb wait-for-device
          adb shell input keyevent 82
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_AVD_HOME: /home/runner/.config/.android/avd

      # Verify emulator is running
      - name: Verify emulator is running
        run: adb devices

      # Run Appium Doctor
      - name: Run Appium Doctor
        run: appium-doctor --android

      # Start Appium server
      - name: Start Appium server
        run: |
          appium &
          sleep 10  # Wait for the Appium server to start

      # Verify Appium server is running
      - name: Verify Appium server is running
        run: curl http://127.0.0.1:4723/status

      # Run Android Tests
      - name: Run Android Tests
        run: |
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "Running Maven tests..."
          mvn test -Denv=local
          echo "Maven tests completed."
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
